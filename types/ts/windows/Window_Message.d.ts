/// <reference path="../../../global.d.ts" />
export default class Window_Message extends Window_Base {
    _background: unknown;
    _positionType: unknown;
    _waitCount: unknown;
    _faceBitmap: unknown;
    _textState: unknown;
    _goldWindow: unknown;
    _nameBoxWindow: unknown;
    _choiceListWindow: unknown;
    _numberInputWindow: unknown;
    _eventItemWindow: unknown;
    _showFast: boolean;
    _lineShowFast: boolean;
    _pauseSkip: boolean;
    constructor(...args: any[]);
    initialize(rect: any): void;
    initMembers(): void;
    setGoldWindow(goldWindow: any): void;
    setNameBoxWindow(nameBoxWindow: any): void;
    setChoiceListWindow(choiceListWindow: any): void;
    setNumberInputWindow(numberInputWindow: any): void;
    setEventItemWindow(eventItemWindow: any): void;
    clearFlags(): void;
    update(): void;
    checkToNotClose(): void;
    synchronizeNameBox(): void;
    canStart(): boolean;
    startMessage(): void;
    newLineX(textState: any): number;
    updatePlacement(): void;
    updateBackground(): void;
    terminateMessage(): void;
    updateWait(): boolean;
    updateLoading(): boolean;
    updateInput(): boolean;
    isAnySubWindowActive(): any;
    updateMessage(): boolean;
    shouldBreakHere(textState: any): boolean;
    canBreakHere(textState: any): boolean;
    onEndOfText(): void;
    startInput(): boolean;
    isTriggered(): any;
    doesContinue(): boolean;
    areSettingsChanged(): boolean;
    updateShowFast(): void;
    newPage(textState: any): void;
    updateSpeakerName(): void;
    loadMessageFace(): void;
    drawMessageFace(): void;
    processControlCharacter(textState: any, c: any): void;
    processNewLine(textState: any): void;
    processNewPage(textState: any): void;
    isEndOfText(textState: any): boolean;
    needsNewPage(textState: any): boolean;
    processEscapeCharacter(code: any, textState: any): void;
    startWait(count: any): void;
    startPause(): void;
    isWaiting(): any;
}
