/// <reference path="../../../global.d.ts" />
export default class Scene_Shop extends Scene_MenuBase {
    _goods: unknown;
    _purchaseOnly: unknown;
    _item: unknown;
    _goldWindow: typeof Window_Gold;
    _commandWindow: typeof Window_ShopCommand;
    _dummyWindow: typeof Window_Base;
    _numberWindow: typeof Window_ShopNumber;
    _statusWindow: typeof Window_ShopStatus;
    _buyWindow: typeof Window_ShopBuy;
    _categoryWindow: typeof Window_ItemCategory;
    _sellWindow: typeof Window_ShopSell;
    constructor(...args: any[]);
    initialize(): void;
    prepare(goods: any, purchaseOnly: any): void;
    create(): void;
    createGoldWindow(): void;
    goldWindowRect(): import("../..").Rectangle;
    createCommandWindow(): void;
    commandWindowRect(): import("../..").Rectangle;
    createDummyWindow(): void;
    dummyWindowRect(): import("../..").Rectangle;
    createNumberWindow(): void;
    numberWindowRect(): import("../..").Rectangle;
    createStatusWindow(): void;
    statusWindowRect(): import("../..").Rectangle;
    createBuyWindow(): void;
    buyWindowRect(): import("../..").Rectangle;
    createCategoryWindow(): void;
    categoryWindowRect(): import("../..").Rectangle;
    createSellWindow(): void;
    sellWindowRect(): import("../..").Rectangle;
    statusWidth(): number;
    activateBuyWindow(): void;
    activateSellWindow(): void;
    commandBuy(): void;
    commandSell(): void;
    onBuyOk(): void;
    onBuyCancel(): void;
    onCategoryOk(): void;
    onCategoryCancel(): void;
    onSellOk(): void;
    onSellCancel(): void;
    onNumberOk(): void;
    onNumberCancel(): void;
    doBuy(number: any): void;
    doSell(number: any): void;
    endNumberInput(): void;
    maxBuy(): number;
    maxSell(): any;
    money(): any;
    currencyUnit(): any;
    buyingPrice(): any;
    sellingPrice(): number;
}
