/// <reference path="../../../global.d.ts" />
export default class Game_Picture {
    _name: unknown;
    _origin: unknown;
    _x: unknown;
    _y: unknown;
    _scaleX: unknown;
    _scaleY: unknown;
    _opacity: unknown;
    _blendMode: unknown;
    _targetX: unknown;
    _targetY: unknown;
    _targetScaleX: unknown;
    _targetScaleY: unknown;
    _targetOpacity: unknown;
    _duration: unknown;
    _wholeDuration: unknown;
    _easingType: unknown;
    _easingExponent: number;
    _tone: unknown;
    _toneTarget: unknown;
    _toneDuration: unknown;
    _angle: number;
    _rotationSpeed: unknown;
    constructor(...args: any[]);
    initialize(): void;
    name(): unknown;
    origin(): unknown;
    x(): unknown;
    y(): unknown;
    scaleX(): unknown;
    scaleY(): unknown;
    opacity(): unknown;
    blendMode(): unknown;
    tone(): unknown;
    angle(): number;
    initBasic(): void;
    initTarget(): void;
    initTone(): void;
    initRotation(): void;
    show(name: any, origin: any, x: any, y: any, scaleX: any, scaleY: any, opacity: any, blendMode: any): void;
    move(origin: any, x: any, y: any, scaleX: any, scaleY: any, opacity: any, blendMode: any, duration: any, easingType: any): void;
    rotate(speed: any): void;
    tint(tone: any, duration: any): void;
    update(): void;
    updateMove(): void;
    updateTone(): void;
    updateRotation(): void;
    applyEasing(current: any, target: any): number;
    calcEasing(t: any): any;
    easeIn(t: any, exponent: any): number;
    easeOut(t: any, exponent: any): number;
    easeInOut(t: any, exponent: any): number;
}
